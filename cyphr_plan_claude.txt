{\rtf1\ansi\ansicpg1251\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # \uc0\u1052 \u1040 \u1050 \u1057 \u1048 \u1052 \u1040 \u1051 \u1068 \u1053 \u1054  \u1056 \u1040 \u1047 \u1042 \u1045 \u1056 \u1053 \u1059 \u1058 \u1067 \u1049  \u1055 \u1051 \u1040 \u1053  \u1044 \u1051 \u1071  CLAUDE CODE: \u1044 \u1086 \u1089 \u1090 \u1088 \u1086 \u1081 \u1082 \u1072  \u1080  \u1060 \u1080 \u1082 \u1089  Cyphr Messenger (\u1042 \u1077 \u1073 -\u1042 \u1077 \u1088 \u1089 \u1080 \u1103 ) \'97 Quantum-Safe Edition (\u1054 \u1073 \u1085 \u1086 \u1074 \u1083 \u1077 \u1085 \u1085 \u1099 \u1081  \u1085 \u1072  14 \u1072 \u1074 \u1075 \u1091 \u1089 \u1090 \u1072  2025)\
\
\uc0\u1069 \u1090 \u1086 \u1090  \u1087 \u1083 \u1072 \u1085  \'97 \u1087 \u1086 \u1083 \u1085 \u1099 \u1081 , \u1076 \u1077 \u1090 \u1072 \u1083 \u1080 \u1079 \u1080 \u1088 \u1086 \u1074 \u1072 \u1085 \u1085 \u1099 \u1081  blueprint \u1076 \u1083 \u1103  Claude Code, \u1086 \u1089 \u1085 \u1086 \u1074 \u1072 \u1085 \u1085 \u1099 \u1081  \u1085 \u1072  \u1074 \u1072 \u1096 \u1077 \u1084  \u1075 \u1086 \u1090 \u1086 \u1074 \u1086 \u1084  \u1087 \u1088 \u1086 \u1084 \u1087 \u1090 \u1077  (elite team \u1089 \u1087 \u1077 \u1094 \u1080 \u1072 \u1083 \u1080 \u1089 \u1090 \u1086 \u1074 ). \u1054 \u1085  \u1091 \u1095 \u1080 \u1090 \u1099 \u1074 \u1072 \u1077 \u1090  **\u1074 \u1089 \u1077  \u1073 \u1088 \u1077 \u1096 \u1080  \u1080  \u1087 \u1088 \u1086 \u1073 \u1083 \u1077 \u1084 \u1099  \u1083 \u1086 \u1075 \u1080 \u1082 \u1080 ** \u1080 \u1079  \u1072 \u1085 \u1072 \u1083 \u1080 \u1079 \u1072 : creds exposure (migrate to Secrets Manager with rotation), disk full (auto-clean cron), GoTrue warnings (singleton client), no TURN (add node-turn for NAT), workflow errors (seed confirm re-enter, tx double-check/safety verify, interrupt resume via localStorage, offline queue IndexedDB, multi-device desync via realtime sync, error guidance user-friendly with retry), wallet logic (entropy check/reject weak seed, min balance auto-createAccount, trustline pre-check/auto-add, decimals handling, cross-chain path standardization BIP44), tx in chats (fee preview dynamic feeStats, errors retry on tx_failed/underfunded/no_dest/no_trustline with reload/rebuild, phishing safety numbers SHA-256 emoji confirm), crypto (side-channel WASM/masking/constant-time, metadata full onion/dummy packets, replay nonce unique + timestamp, PFS ratchet update per msg/session), infra SPOF (ASG min 2 + ELB + Shield/WAF), legal \u1056 \u1060  (geofence QIRN/disclaimers "private use", fallback Email+TOTP on +7/IP), testing (Jest unit entropy/side-channel sim/tx errors, Cypress E2E interrupts/offline/phishing, Locust load /wallet/send, ZAP security scan, New Relic perf <20ms crypto/<100ms API), \u1080  \u1076 \u1088 \u1091 \u1075 \u1080 \u1077  (KYC/AML log tx >$1K anonymous, anomaly detect AI networkx for spam/threats, accessibility ARIA/high contrast, A/B UX mental models demo in onboarding).\
\
\uc0\u1055 \u1083 \u1072 \u1085  \u1089 \u1090 \u1088 \u1091 \u1082 \u1090 \u1091 \u1088 \u1080 \u1088 \u1086 \u1074 \u1072 \u1085  \u1076 \u1083 \u1103  \u1087 \u1086 \u1089 \u1083 \u1077 \u1076 \u1086 \u1074 \u1072 \u1090 \u1077 \u1083 \u1100 \u1085 \u1086 \u1075 \u1086  \u1074 \u1099 \u1087 \u1086 \u1083 \u1085 \u1077 \u1085 \u1080 \u1103  Claude Code: **Phases** \u1089  sub-tasks, code snippets (TS/JS/SQL), tables \u1076 \u1083 \u1103  comparisons/enumerations/data (e.g., error mapping, crypto params), tests examples, deploy steps. \u1054 \u1073 \u1097 \u1080 \u1081  \u1092 \u1086 \u1082 \u1091 \u1089 : Stabilize production (fix issues), complete 5% missing features (groups/files/voice/cross-chain/QIRN/AI/enterprise), enhance security/UX (integrate all fixes), test rigorously, prepare beta 100K users/mobile port (React Native share 90% code). \u1048 \u1089 \u1087 \u1086 \u1083 \u1100 \u1079 \u1091 \u1081 \u1090 \u1077  \u1082 \u1072 \u1082  "master plan" \u1074  \u1087 \u1088 \u1086 \u1084 \u1087 \u1090 \u1077 : "Follow this detailed plan step-by-step as the team."\
\
### Phase 1: \uc0\u1040 \u1085 \u1072 \u1083 \u1080 \u1079  \u1080  \u1060 \u1080 \u1082 \u1089  \u1058 \u1077 \u1082 \u1091 \u1097 \u1080 \u1093  Issues (Stabilize Production)\
- **Sub-task 1.1: SSH Access \uc0\u1080  Logs Check**:\
  - Connect: `ssh -i /Users/daniilbogdanov/cyphrmessenger/cyphr-messenger-key.pem ubuntu@23.22.159.209`.\
  - Check status: `pm2 status` (verify cyphr-full-backend running), `systemctl status nginx` (active), `curl https://app.cyphrmessenger.app/api/health` (OK), `df -h` (disk 96% \'97 immediate risk crash).\
  - Logs: `pm2 logs cyphr-full-backend` (find GoTrue warnings, Twilio errors), `tail -f /var/log/nginx/error.log` (SSL/API issues).\
  - Fix \uc0\u1073 \u1088 \u1077 \u1096 \u1080 : \u1045 \u1089 \u1083 \u1080  down, `pm2 restart all` + `systemctl restart nginx`.\
\
- **Sub-task 1.2: Fix Disk Full (96%)**:\
  - Cleanup manual: `sudo rm -rf /var/log/nginx/*.log.* /var/www/cyphr/node_modules/.cache` (free space, then `yarn install` if needed).\
  - Auto-cron: Edit `sudo crontab -e`, add `0 0 * * * /bin/sh -c 'df -h / | awk "NR==2 \{if ($5 > 80) \{system(\\"rm -rf /var/log/nginx/*.log.* /var/www/cyphr/node_modules/.cache\\")\}\}"'` (daily check >80%, clean old).\
  - Verify: `df -h` >20% free.\
\
- **Sub-task 1.3: Fix GoTrueClient Warnings (Multiple Instances)**:\
  - Code change in supabase service (e.g., supabaseClient.ts): \
    ```ts\
    import \{ createClient \} from '@supabase/supabase-js';\
    let client: ReturnType<typeof createClient> | null = null;\
    export function getSupabaseClient() \{\
      if (!client) \{\
        client = createClient(process.env.VITE_SUPABASE_URL!, process.env.VITE_SUPABASE_ANON_KEY!);\
      \}\
      return client;\
    \}\
    ```\
  - Replace all createClient calls with getSupabaseClient().\
  - Test: Restart backend, check logs no warnings.\
\
- **Sub-task 1.4: Add TURN Server for Calls (NAT Fix)**:\
  - Install: `npm i node-turn` (if not, add to package.json).\
  - Config backend: In server.ts, add TURN setup:\
    ```ts\
    import turn from 'node-turn';\
    const turnServer = new turn.Server(\{\
      port: 3478,\
      authMech: 'long-term',\
      realm: 'cyphr-messenger',\
      credentials: \{ 'user': 'pass' \} // From Secrets\
    \});\
    turnServer.start();\
    ```\
  - Frontend WebRTC init (calls component): Add to peerConnection:\
    ```ts\
    const iceServers = [\{ urls: 'turn:23.22.159.209:3478', username: 'user', credential: 'pass' \}];\
    const pc = new RTCPeerConnection(\{ iceServers \});\
    ```\
  - Test: Simulate NAT (different networks), verify calls connect.\
\
- **Sub-task 1.5: Migrate Creds to Secrets Manager (Exposure Fix)**:\
  - AWS Console: Create Secrets (TwilioSID, TwilioToken, StellarSecret, etc.).\
  - Code: Install @aws-sdk/client-secrets-manager, in server.ts:\
    ```ts\
    import \{ SecretsManagerClient, GetSecretValueCommand \} from '@aws-sdk/client-secrets-manager';\
    const client = new SecretsManagerClient(\{ region: 'us-east-1' \});\
    async function getSecret(key: string) \{\
      const command = new GetSecretValueCommand(\{ SecretId: key \});\
      const response = await client.send(command);\
      return response.SecretString;\
    \}\
    // Usage: const twilioSid = await getSecret('TwilioSID');\
    // Remove from .env\
    ```\
  - Rotation: Add Lambda function for 90d auto-rotate (Twilio API regenerate token).\
  - Test: Remove .env vars, verify endpoints work.\
\
- **Sub-task 1.6: Suppress/Fix Minor Warnings**:\
  - Code: In console.warn overrides or libs, filter non-critical (e.g., if warning 'GoTrue' ignore).\
  - Logs clean: Add Winston filter mask sensitive (phone/keys).\
\
### Phase 2: \uc0\u1060 \u1080 \u1082 \u1089  \u1051 \u1086 \u1075 \u1080 \u1082 \u1080  Workflow \u1080  UX Errors (Usability/Security Enhance)\
- **Sub-task 2.1: Registration Flow Optimize (\uc0\u1056 \u1060  Fallback, Error Guidance)**:\
  - Detect RU: In /register, check phone.startsWith('+7') \uc0\u1080 \u1083 \u1080  IP geocode (use @maxmind/geoip2-node if needed ).\
  - Fallback: If RU, switch Email input + TOTP (totp.generateSecret, SendGrid send code via npm i @sendgrid/mail).\
  - Error map: In /auth/send-otp, catch Twilio e.code (20404: res.json(\{msg: 'Invalid phone \'97 check format E.164'\}), 60200: 'Invalid param \'97 retry', add captcha google-recaptcha on >3 fails).\
  - Guidance: Frontend toast with buttons ("Resend" / "Switch to Email").\
\
- **Sub-task 2.2: Profile/Security/Wallet Setup Fixes (Interrupt Resume, Seed Confirm)**:\
  - Resume: Use localStorage for partial data (e.g., on network drop, save step/phone, load on return, cleanup orphans via /auth/cleanup API delete partial users).\
  - Seed confirm: In /wallet-setup, after show 24 words, modal re-enter 3 random words (compare, if wrong retry), recommend offline backup (link to Cryptosteel/paper guide  ).\
  - Biometric fallback: If no WebAuthn support, force PIN + TOTP, notify "Upgrade browser for biometrics".\
  - PIN strength: Meter (zxcvbn check min score 3, mix chars), lock after 5 attempts (exponential backoff 1min/5min/1h).\
\
- **Sub-task 2.3: Main Workflow Enhancements (Offline Queue, Multi-Device Sync)**:\
  - Offline queue: Use IndexedDB (idb-keyval npm) for pending msgs/tx, on reconnect sync (Socket 'reconnect' event send queue).\
  - Multi-device: Sync keys/session via Supabase realtime channel (subscribe 'user:*', broadcast updates with Kyber encrypted), PFS ratchet per device to avoid desync.\
  - Settings sync: On toggle (e.g., privacy last seen), upsert DB, realtime broadcast to devices.\
\
- **Sub-task 2.4: General UX Optimize (A/B Testing, Accessibility, Mental Models)**:\
  - A/B: Add posthog/react-feature-flags \uc0\u1076 \u1083 \u1103  variants (e.g., onboarding demo E2E tx vs text), track user retention.\
  - Accessibility: ARIA labels (e.g., aria-label="Send OTP" on buttons), high contrast toggle in settings.\
  - Mental models: Onboarding add interactive demo (simulate encrypted msg/tx, explain "Server sees nothing" with animation).\
\
### Phase 3: \uc0\u1060 \u1080 \u1082 \u1089  \u1051 \u1086 \u1075 \u1080 \u1082 \u1080  Wallet \u1080  Tx in Chats (Error Handling, Phishing, Cross-Chain)\
- **Sub-task 3.1: Wallet Creation/Init Fixes**:\
  - Entropy check: In /wallet/create, after gen mnemonic, test entropy (zxcvbn or Shannon calc >3.5 bits/char), reject low with "Weak seed \'97 regenerate".\
  - Min balance: On create, if new account, auto prompt "Fund 1 XLM" or integrate faucet for testnet.\
\
- **Sub-task 3.2: Balances/History Fixes**:\
  - Cache refresh: WebSocket subscribe horizon (stellar-sdk EventSource for account changes), poll 30s fallback.\
  - Trustlines: Pre-check on balance/send, if no USDC, auto append changeTrust op to tx builder.\
\
- **Sub-task 3.3: Send Tx Logic Fixes**:\
  - Fee preview: Use stellar.feeStats() for min/avg/max, show in modal, default avg.\
  - Double-check: Modal preview amount/dest/fee/memo, confirm button.\
  - Errors retry: Catch tx_failed (reload seqNum/rebuild/submit), underfunded (prompt fund/createAccount op append), no_dest (append createAccount min 1 XLM), no_trust (append changeTrust), with user msg "Tx failed: [reason] \'97 Retry with fix?" button.\
  - Decimals: toFixed(7) for Stellar/XLM, BigInt for ETH wei/18, sat for BTC/8.\
\
- **Sub-task 3.4: Tx in Chats Specific Fixes**:\
  - \uc0\u55357 \u56496  modal: Add safety verify (SHA-256 dest \u8594  emoji/qr confirm like Signal ).\
  - Offline queue: Store pending tx in IndexedDB, submit on reconnect.\
  - Receipt: On fail, chat notification "Tx pending/failed \'97 details/retry".\
\
- **Sub-task 3.5: Cross-Chain Complete**:\
  - Unified logic: In /wallet/send, if chain='btc' (bitcoinjs psbt addInput/output/sign/extractTx), 'eth' (ethers sendTransaction gasPrice await getFeeData), etc., with standardized errors (map to "Insufficient funds" / "Invalid address").\
  - Paths: BIP44 for all (m/44'/0'/0' BTC, m/44'/60'/0'/0 ETH, etc.).\
\
- **Sub-task 3.6: Wallet Security Breaches Fix**:\
  - Phishing: Safety numbers on dest confirm.\
  - KYC/AML: If tx >$1K USD equiv, log anonymous to compliance_logs (Supabase insert, no PII).\
  - Weak PIN: Strength + lock.\
\
### Phase 4: \uc0\u1060 \u1080 \u1082 \u1089  Crypto \u1080  Other Logic (Side-Channel, Metadata, Calls, Groups)\
- **Sub-task 4.1: Crypto Enhancements**:\
  - Side-channel: Migrate to WASM libsodium for Kyber/ChaCha, add masking (ss = random ^ shared, sodium.memcmp/zero).\
  - Metadata: Full onion wrap (multi-layer Kyber+ChaCha for hops), dummy packets random intervals.\
  - Replay: Nonce unique (session.usedNonces set add/check), timestamp \'b15min.\
  - PFS: Double ratchet update chainKey on each msg (hkdf or sha256 ratchet).\
\
- **Sub-task 4.2: Calls Logic Fix**:\
  - Add TURN as in Phase 1, encrypt streams ChaCha (derive key from session shared).\
\
- **Sub-task 4.3: Groups Complete**:\
  - Endpoint /messages/group/create (uuid, insert participants, gen groupKey random32 encrypted Kyber per member).\
  - Logic: Encrypt once with sender keys, broadcast; on member add/remove, re-key ratchet.\
  - RLS: Extend policy (select if auth.uid() in participants).\
  - UI: GroupChat screen with roles/add/remove confirm.\
\
- **Sub-task 4.4: Files/Voice Complete**:\
  - Files: Encrypt arrayBuffer ChaCha, upload Supabase bucket 'attachments', store encrypted url in messages.\
  - Voice: MediaRecorder getUserMedia audio, blob encrypt/upload as 'audio' type, playback decrypt.\
\
- **Sub-task 4.5: QIRN Complete (Offline/Censorship)**:\
  - Libp2p create node (transports tcp/webSockets, discovery bootstrap/Bluetooth via Web Bluetooth API).\
  - Logic: If offline, relay via peers (dial conn.write(encrypted)), time sync NTP fallback for timestamps.\
  - Geofence: If IP RU, toggle disable + disclaimer "For private use only \'97 not for bypass".\
  - Premium: Stripe check $4.99/mo.\
\
- **Sub-task 4.6: AI/Enterprise Complete**:\
  - AI: Networkx graph msgs (nodes users, edges msgs, detect cycles/high density spam/url threats, alert toast).\
  - Enterprise: /admin dashboard (role 'admin' check, view logs/compliance, audit trails insert on access/tx).\
\
- **Sub-task 4.7: Other Fixes (Tactical Mode, Disappearing, Rate Limits)**:\
  - Tactical: Triple tap \uc0\u8594  UI darken, auto-delete 24h, screenshot block (prevent beforeprint/capture events).\
  - Disappearing: Timer after read, sync multi-device via DB.\
  - Rate limits: /wallet/send 1/min, /messages/send 10/min to prevent abuse.\
\
### Phase 5: \uc0\u1058 \u1077 \u1089 \u1090 \u1080 \u1088 \u1086 \u1074 \u1072 \u1085 \u1080 \u1077  \u1080  \u1040 \u1091 \u1076 \u1080 \u1090  (Rigorous Validation)\
- **Sub-task 5.1: Unit Tests (Jest)**:\
  - Crypto: Test masking/side-channel (time encapsulate constant), entropy (reject low Shannon <3.5).\
  - Wallet: Sim tx errors (mock Stellar underfunded, assert retry logic).\
  - Example:\
    ```ts\
    test('tx underfunded retry', async () => \{\
      jest.spyOn(stellar, 'submitTransaction').mockRejectedValueOnce(\{ code: 'tx_failed', reason: 'underfunded' \});\
      const result = await sendTx(...); // Assert reload/rebuild called\
      expect(result).toBe('retry success');\
    \});\
    ```\
\
- **Sub-task 5.2: E2E Tests (Cypress)**:\
  - Flows: Registration interrupt/resume, wallet seed confirm (fail on wrong re-enter), tx in chats with errors (sim underfunded, assert guidance/retry), offline queue sync, multi-device desync test (mock 2 browsers, verify key update).\
  - Example: `cy.visit('/register'); cy.type(phone); cy.click(send); cy.networkDrop(); cy.reload(); cy.assert(resume from localStorage).`\
\
- **Sub-task 5.3: Load/Security Tests**:\
  - Locust: 1000 users /wallet/send (throughput >100/s, no crashes).\
  - ZAP: Scan API for vuln (SQLi/XSS, assert RLS blocks foreign access).\
  - Perf: New Relic validate <20ms Kyber, <100ms API.\
\
- **Sub-task 5.4: Manual/Audit**:\
  - Checklist: Seed loss prevent (confirm works), tx phishing (safety confirm blocks fake), \uc0\u1056 \u1060  fallback (no Twilio on +7), anomaly detect (flag spam).\
  - External audit: Plan Trail of Bits for PQC/wallet (budget $10K-20K).\
\
### Phase 6: \uc0\u1044 \u1077 \u1087 \u1083 \u1086 \u1081  \u1080  \u1052 \u1086 \u1085 \u1080 \u1090 \u1086 \u1088 \u1080 \u1085 \u1075  (Scale to Beta)\
- **Sub-task 6.1: Deploy Changes**:\
  - Git: If no repo, `git init /var/www/cyphr`, commit, pull from local "project 2/".\
  - Build: `npm run build` frontend, tsc backend.\
  - Restart: `pm2 restart cyphr-full-backend --cluster`, `systemctl reload nginx`.\
  - Verify: Curl endpoints, browser test flows.\
\
- **Sub-task 6.2: Scale Infra**:\
  - ASG: AWS Console create group min 2 t3.medium, ELB target /api/health.\
  - CloudFront: Distribution for /dist static caching.\
  - Shield/WAF: Enable DDoS rules.\
\
- **Sub-task 6.3: Beta Launch**:\
  - Waitlist on landing, roll to 10K, monitor New Relic for issues (e.g., tx fail rates <1%).\
  - Feedback: Add in-app survey for UX (e.g., seed confirm helpful?).\
\
### Phase 7: \uc0\u1055 \u1086 \u1076 \u1075 \u1086 \u1090 \u1086 \u1074 \u1082 \u1072  Mobile Port (React Native After Web Stable)\
- **Sub-task 7.1: Setup**:\
  - Expo init, share React code (crypto WASM native via expo-crypto, UI Tailwind-rn).\
\
- **Sub-task 7.2: Adapt Features**:\
  - Auth: Expo-local-authentication for biometrics.\
  - Wallet: Same Stellar/cross, but native secure-store for seed.\
  - QIRN: Expo-bluetooth for P2P.\
  - Offline: Expo-file-system for queue.\
\
- **Sub-task 7.3: Test/Deploy**:\
  - iOS: Expo build, TestFlight.\
  - Android: Google Play alpha.\
  - Fix: Test tx errors on mobile, ensure PFS sync.\
\
\uc0\u1069 \u1090 \u1086 \u1090  \u1087 \u1083 \u1072 \u1085  \'97 \u1084 \u1072 \u1082 \u1089 \u1080 \u1084 \u1072 \u1083 \u1100 \u1085 \u1086  \u1088 \u1072 \u1079 \u1074 \u1077 \u1088 \u1085 \u1091 \u1090 \u1099 \u1081 , \u1089  \u1091 \u1095 \u1077 \u1090 \u1086 \u1084  \u1074 \u1089 \u1077 \u1093  \u1073 \u1088 \u1077 \u1096 \u1077 \u1081 /\u1087 \u1088 \u1086 \u1073 \u1083 \u1077 \u1084  (integrated fixes in sub-tasks/code/tables). \u1044 \u1083 \u1103  Claude Code: Append to prompt as "Follow this detailed plan: [paste plan]". }